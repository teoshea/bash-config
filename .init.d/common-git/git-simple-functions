#################################################################
## GLOBALS
#################################################################

# 22/09/16 - Below is only appropriate for single root setup
# export git_folder=".git"
# 22/09/16 - intention is to use the below to generate MRs/PRs from the command line.  Not quite there yet.
# export git_support_file="$git_folder/git_support"

export git_template="$HOME/.git_template"


#################################################################
## ALIASES: Simple Git aliases to reduce typing
#################################################################

if [ -f ~/.init.d/git-completion.bash ]; then
    . ~/.init.d/git-completion.bash
fi

# Add git completion to aliases
__git_complete gc _git_checkout
__git_complete gp _git_pull

alias st="git status"                   # Status
alias ru="git remote update"            # Remote Update
alias rb="git branch -m"                # Rename Branch
alias cm="git commit -m"                # Commit With Comment
alias rhh="git reset HEAD --hard"       # Reset HEAD hard
alias gc="git checkout"                 # Checkout
alias gm="git merge"                    # Merge
alias gp="git pull"                     # Pull
alias ai="git add --interactive"        # Add interactive
alias au="git add --update"             # Add updated
alias aa="git add --all :/"             # Add all
alias ac="git commit --amend"           # Amend commit
alias gd="git difftool -g"              # Git GUI Diff
alias find-remote="git remote | grep $1"

#################################################################
## FUNCTIONS: Simple Git related user functions (handy shortcuts)
#################################################################

# Go to Git root
# 22/09/16 - Commented out; this is only appropriate for a single git root
#gr()
#{
#    cd $git_root
#}
#export -f gr

# Show the top level folder of repository
toplevel()
{
    git rev-parse --show-toplevel
}
export -f toplevel

# Create Branch at...
cb()
{
    if [ -z ${1+x} ]; then
       echo "cb - Create Branch at..."
       echo "Usage: cb new-branchname [basedon-branchname]"
       return -1
    fi

    git checkout -B $1 $2
}
export -f cb

# Unstage Files
us()
{
    if [ -z ${1+x} ]; then
        echo "us - Unstage files..."
        echo "Usage: us file1 [file2...]"
        return -1
    fi

    for i in $@
    do
        git reset HEAD `find -name "$i*"`
    done
}
export -f us
    
# Revert Files
rv()                                    
{
    if [ -z ${1+x} ]; then
        echo "rv - Revert files..."
        echo "Usage: rv file1 [file2...]"
        return -1
    fi

    for i in $@
    do
        git checkout -- "*$i*"
    done
}
export -f rv

# Add Files
af()
{
    if [ -z ${1+x} ]; then
        echo "af - Add (stage) files..."
        echo "Usage: af file1 [file2...]"
        return -1
    fi

    for i in $@
    do
        git add `find -name "$i*"`
    done
}
export -f af

# Push to Origin
po()
{
    git push origin `git rev-parse --abbrev-ref HEAD` ${*}
}
export -f po
